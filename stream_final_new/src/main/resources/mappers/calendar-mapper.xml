<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="calendar">

	<resultMap type="CalendarVo" id="CalendarMembersMap">
		<id property="sno" column="sno"/>
		<result column="USERID" property="userid" />
		<result column="mname" property="mname" />
		<result column="SSTART" property="start" />
		<result column="SEND" property="end" />
		<result column="STITLE" property="title" />
		<result column="SCOLOR" property="color" />
		<result column="SMEMO" property="smemo" />
		<result column="SPLACE" property="splace"/>
		<result column="PNO" property="pno" />
		<collection property="attenduseridList" ofType="MemberSimpleVo">
			<result column="ATTENDUSERID" property="userid" />
			<result column="ATTENDNAME" property="mname" />
		</collection>
	</resultMap>
	
	<!-- 일정 조회 -->
	<!-- 동적 SQL문 where을 건 이유(if랑 세트) =pno를 안 들고 진입하는 경우도 있기 때문에(이걸 걸면 안에 where을 적을 필요가 없다.) --> <!-- 다른 방법으로 trim도 있다. --><!-- 		WHERE USERID =#{userid} or attenduserid =#{userid} -->
	<select id="selectList" resultMap="CalendarMembersMap" parameterType="CalendarParamVo">
		select * from 
(
SELECT SNO, USERID, mname, to_char(SSTART, 'yyyy-mm-dd') SSTART, to_char(SEND, 'yyyy-mm-dd') SEND, STITLE, SCOLOR, SPLACE, SMEMO, PNO, ATTENDUSERID , ATTENDNAME
		FROM v_u_schedule tbs left outer join v_u_member_schedule tbms using(sno) 
		where pno
        
		<choose>
			<when test="pno != null and pno != ''">
				= #{pno})
			</when>
			<otherwise>
				in (select pno from member_project where  userid=#{userid}))
			</otherwise>
		</choose>
		left join task using(pno,userid) 
	</select>

	<!-- 일정 상세조회 -->
	<select id="selectOne" resultMap="CalendarMembersMap" parameterType="string">
		SELECT  SNO, USERID, to_char(SSTART, 'yyyy-mm-dd') SSTART, to_char(SEND, 'yyyy-mm-dd') SEND, STITLE, SCOLOR, SPLACE, SMEMO, PNO, ATTENDUSERID
		from ( select * from schedule WHERE sno = #{sno} ) tbs join member_schedule tbms using(sno)
	</select>
	
	<!-- 프로젝트의 멤버들 조회 --> 
	<select id="memberProjectList" resultType="MemberSimpleVo">
		select userid, (select mname from users tu where tm.userid=tu.userid ) mname 
		from MEMBER_PROJECT tm 		
		where pno=#{pno}
	</select>
	

	<!-- 일정 등록 과 끼인테이블 등록 selectKey사용 -->
	<!-- 	
	<insert id="insert" parameterType="CalendarVo">
		<selectKey keyProperty="sno" resultType="_int"
			order="BEFORE">
			SELECT schedule_sequence.NEXTVAL FROM dual
		</selectKey> 
		
		INSERT INTO SCHEDULE (SNO, USERID, PNO, SSTART, SEND, SMEMO, STITLE, SCOLOR)
		VALUES (schedule_sequence.NEXTVAL, #{userid}, #{pno}, #{start}, #{end}, #{smemo}, #{title},
		'#'||lpad(trim(to_char(floor(dbms_random.value(0,16777216)),'XXXXXX')),6,'0'))
	</insert>
	
	<insert id="insertmember" parameterType="CalendarVo">
		INSERT INTO
		Member_SCHEDULE (SNO, ATTENUERID)
		VALUES (#{sno},#{attenduserid})
	</insert>
	-->

	<!-- 일정 등록 + 끼인 테이블 attenduserid 등록-->
	<insert id="insert" parameterType="CalendarVo">
		INSERT All
		INTO SCHEDULE (SNO, USERID, PNO, SSTART, SEND, SMEMO, STITLE, SPLACE, SCOLOR)
				VALUES (schedule_sequence.NEXTVAL, #{userid}, #{pno}, #{start}, #{end}, #{smemo}, #{title}, #{splace},'#'||lpad(trim(to_char(floor(dbms_random.value(0,16777216)),'XXXXXX')),6,'0'))
		<if test="attenduseridList != null">
		<foreach collection="attenduseridList" item="attenduserid">
		INTO Member_SCHEDULE (SNO, ATTENDUSERID)
			VALUES (schedule_sequence.NEXTVAL, #{attenduserid.userid})
		</foreach>		
		</if>
		SELECT * FROM dual
	</insert>


	<!-- 캘린더 수정 --> <!-- 작성자,지도 수정x, 참가자는 보류 -->
	<update id="update" parameterType="CalendarVo">
		UPDATE SCHEDULE SET 
		STITLE=#{title}, SSTART=#{start}, SEND=#{end}, SMEMO=#{smemo}
		WHERE SNO=#{sno}
	</update>

	<!-- 캘린더 삭제 --> <!-- TODO -->
	<delete id="delete" parameterType="String">
		DELETE FROM SCHEDULE
		WHERE SNO=#{sno}
	</delete>
	
	<!-- 캘린더 삭제 --> <!-- TODO -->
	<delete id="deletemember" parameterType="String">
		DELETE FROM MEMBER_SCHEDULE
		WHERE SNO=#{sno}
	</delete>

	
	<!-- 프로젝트에 참여중인 회원인지 확인 -->
	<select id="isAttendedProject" resultType="_int" parameterType="map">
	select count(*) cnt from member_project where pno=#{pno} and userid=#{userid}
	</select>
	
</mapper>
