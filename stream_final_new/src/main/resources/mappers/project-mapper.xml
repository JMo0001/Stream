<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project">
	 
	<select id="selectList" resultType="ProjectVo">
		SELECT TP.PNO, TP.PNAME, TP.PSTATUS, TP.PACCESS
		, TP.USERID, VUD.MNAME, VUD.MRANK, VUD.DEPTNAME
		, (SELECT COUNT(*) FROM MEMBER_PROJECT WHERE PNO= TP.PNO) AS COUNTMEMBER
		FROM (
		SELECT * FROM PROJECT
		WHERE (USERID= #{USERID} OR PNO IN (SELECT PNO FROM MEMBER_PROJECT WHERE
		USERID=#{USERID}))
		AND PSTATUS IN ('미진행', '진행', '보류')
		AND PACCESS IN ('ACCESS')
		) TP
		JOIN V_U_DEPT VUD ON TP.USERID = VUD.USERID
		ORDER BY TO_NUMBER(PNO) DESC
	</select>
  	
	<select id="selectHide" resultType="ProjectVo">
		SELECT TP.PNO, TP.PNAME, TP.PSTATUS, TP.PACCESS
		, TP.USERID, VUD.MNAME, VUD.MRANK, VUD.DEPTNAME
		, (SELECT COUNT(*) FROM MEMBER_PROJECT WHERE PNO= TP.PNO) AS COUNTMEMBER
		FROM (
		SELECT * FROM PROJECT
		WHERE (USERID= #{USERID} OR PNO IN (SELECT PNO FROM MEMBER_PROJECT WHERE
		USERID=#{USERID}))
		AND PSTATUS IN ('숨김')
		AND PACCESS IN ('ACCESS')
		) TP
		JOIN V_U_DEPT VUD ON TP.USERID = VUD.USERID
		ORDER BY TO_NUMBER(PNO) DESC
	</select>
	
	<select id="sessionPname" resultType="ProjectVo">
		SELECT PNO, PNAME
		FROM PROJECT
		WHERE PNO = #{pno}
	</select>
	
	
	<select id="selectOne" resultType="ProjectVo">
		select mname, pstatus, mrank, pmember userid, deptname, pno, pname, pcontent, paccess, pdate, to_char(PSTARTDATE, 'yyyy-mm-dd') PSTARTDATE, to_char(PENDDATE, 'yyyy-mm-dd') PENDDATE, pcolor, ROWNUM PROW
	    from(
	        select mname, mrank, userid, deptno, ccode from users where userid = #{userid}) users
	    join dept dept using(deptno, ccode)
	    join (select pno, ppr.userid pmaster, pname, pcontent, paccess, pdate, pstartdate, penddate, pcolor, pstatus, jj.userid pmember
	    from project ppr
	    join (select mp.pno, userid
	            from project pr
	            join member_project mp using(userid)
	            group by (mp.pno, userid)
	            ) jj using(pno)) on (userid = pmember)
	    where PNO = #{pno}
	</select>
	
	<!--  
	<select id="selectOne" resultType="ProjectVo">
		SELECT PNO, USERID, PNAME, PCONTENT, PACCESS, PDATE, to_char(PSTARTDATE, 'yyyy-mm-dd') PSTARTDATE, to_char(PENDDATE, 'yyyy-mm-dd') PENDDATE, PSTATUS
		FROM PROJECT
		WHERE PNO = #{pno}
		AND USERID = #{userid}
	</select>
	-->
	 
	<!-- 프로젝트에 참여할 멤버 추가 -->
	<insert id="insertList" parameterType="ProjectInsertParamVo">
		INSERT ALL 
			INTO PROJECT (PNO, USERID, PNAME, PCONTENT, PACCESS, PSTARTDATE, PENDDATE, PSTATUS)
			VALUES (project_sequence.NEXTVAL, #{userid}, #{pname}, #{pcontent}, #{paccess}, #{pstartdate}, #{penddate}, #{pstatus})
		  <foreach collection="memberProjectArr" item="memberuserid">
			INTO MEMBER_PROJECT(PNO, USERID)		values (project_sequence.NEXTVAL, #{memberuserid} )
		  </foreach>
		SELECT * FROM DUAL
	</insert>
	 
	<delete id="deleteList" parameterType="ProjectVo">
		DELETE FROM PROJECT WHERE PNO = #{pno} 
	</delete>
	 
	<update id="updateList" parameterType="ProjectVo">
		
        UPDATE PROJECT	SET PNAME=#{pname}, pcontent=#{pcontent}, PSTATUS=#{pstatus}, PSTARTDATE=#{pstartdate}, PENDDATE=#{penddate}
        WHERE PNO = #{pno}
		
	<!--  
		UPDATE PROJECT SET PNAME=#{pname}, pcontent=#{pcontent}, PSTATUS=#{pstatus}, PSTARTDATE=#{pstartdate}, PENDDATE=#{penddate}
		WHERE PNO=#{pno}
	-->
	</update>
	
	<select id="searchProjectList" parameterType="ProjectVo" resultType="ProjectVo">
		SELECT u.mname, pr.pstatus, u.mrank, pr.pmember AS userid, d.deptname, pr.pno, pr.pname, pr.pcontent, pr.paccess, pr.pdate, TO_CHAR(pr.PSTARTDATE, 'yyyy-mm-dd') PSTARTDATE, TO_CHAR(pr.PENDDATE, 'yyyy-mm-dd') PENDDATE, pr.pcolor, pr.pstatus as project_status, ROWNUM PROW , c.member_count as countMember
		FROM (SELECT mname, mrank, userid , deptno , ccode FROM users WHERE userid = #{userid}) u
				JOIN dept d ON (u.deptno = d.deptno AND u.ccode = d.ccode)
				JOIN (SELECT ppr.*, jj.userid AS pmember FROM project ppr
						JOIN (SELECT mp.pno ,userid  
								FROM project pr JOIN member_project mp USING(userid)
								GROUP BY (mp.pno ,userid)) jj ON (ppr.pno = jj.PNO)
		WHERE PSTATUS IN ('미진행', '진행', '보류') AND PNAME LIKE '%' || #{keyword} || '%') pr ON (u.userid = pmember)
					LEFT JOIN (SELECT pno,COUNT(userid) AS member_count 
								FROM member_project 
								GROUP BY pno) c ON c.PNO=pr.PNO
	
	<!--  
		select mname, pstatus, mrank, pmember userid, deptname, pno, pname, pcontent, paccess, pdate, to_char(PSTARTDATE, 'yyyy-mm-dd') PSTARTDATE, to_char(PENDDATE, 'yyyy-mm-dd') PENDDATE, pcolor, pstatus, ROWNUM PROW
	    from(
	        select mname, mrank, userid, deptno, ccode from users where userid = #{userid}) users
	    join dept dept using(deptno, ccode)
	    join (select pno, ppr.userid pmaster, pname, pcontent, paccess, pdate, pstartdate, penddate, pcolor, pstatus, jj.userid pmember
	    from project ppr
	    join (select mp.pno, userid
	            from project pr
	            join member_project mp using(userid)
	            group by (mp.pno, userid)
	            ) jj using(pno)) on (userid = pmember)
	    where PSTATUS IN ('미진행', '진행', '보류')
		AND PNAME LIKE '%' || #{keyword} || '%'
	-->
	</select>
	
	<select id="selectMname" resultType="MemberSimpleVo">
		select userid, mname, ccode from users where userid=#{userid}
	</select>
	
</mapper>
