<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mainTask">
	<resultMap type="ProjectVo" id="maintaskVoMap">
		<id property="pno" column="PNO"/>
		<result property="pname" column="PNAME"/>
		<result property="userid" column="USERID"/>
		<result property="mname" column="mname"/>
		<collection property="maintaskList" ofType="PtaskVo" column="pno">
			<id property="tno" column="tno"/>
			<result property="pno" column="pno"/>
			<result property="userid" column="userid"/>
			<result property="tmember" column="tmember"/>
			<result property="ttitle" column="ttitle"/>
			<result property="tcontent" column="tcontent"/>
			<result property="tstatus" column="tstatus"/>
			<result property="tdate" column="tdate"/>
			<result property="tstartdate" column="tstartdate"/>
			<result property="tenddate" column="tenddate"/>
			<result property="bref" column="bref"/>
			<result property="brestep" column="brestep"/>
			<result property="brelevel" column="brelevel"/>
			<result property="mname" column="mname"/>
		</collection>
	</resultMap>
	
	<!-- 프로젝트, 업무 조회 -->
	<select id="projectNameList" resultMap="maintaskVoMap" parameterType="string">
	select pname, pstatus, pno, ut.userid, tmember, ttitle, tstatus, to_char(tdate, 'yyyy-mm-dd') tdate, to_char(tstartdate, 'yyyy-mm-dd') tstartdate, to_char(tenddate, 'yyyy-mm-dd') tenddate, tno, bref, brestep, brelevel, mname
    	from ( select tno, pno, t.userid, tmember, ttitle, tcontent, tstatus, tdate, tstartdate, tenddate, bref, brestep, brelevel, mname
                    from task t
                    join users u on(u.userid=t.tmember)
                    where tmember = #{userid} or t.userid = #{userid} )ut
        join project using(pno)
        where pstatus in ('미진행', '진행', '보류')
    	order by to_number(pno) desc, to_number(bref) desc, brelevel asc, to_number(brestep) asc
	</select>
	<!-- 하위 업무 추가 후 업데이트 된 프로젝트 기준 목록 조회 -->
	<select id="projectOneTaskList" resultMap="maintaskVoMap" parameterType="string">
		select pname, pstatus, pno, ut.userid, tmember, ttitle, tstatus, to_char(tdate, 'yyyy-mm-dd') tdate, to_char(tstartdate, 'yyyy-mm-dd') tstartdate, to_char(tenddate, 'yyyy-mm-dd') tenddate, tno, bref, brestep, brelevel, mname
    	from ( select tno, pno, t.userid, tmember, ttitle, tcontent, tstatus, tdate, tstartdate, tenddate, bref, brestep, brelevel, mname
                    from task t
                    join users u on(u.userid=t.tmember)
                    where tmember = #{userid} or t.userid = #{userid} )ut
        join project using(pno)
        where pstatus in ('미진행', '진행', '보류') and pno=#{pno}
    	order by to_number(pno) desc, to_number(bref) desc, brelevel asc, to_number(brestep) asc
	</select>
	
	<!-- 하위업무 추가 -->
	<insert id="innerTaskInsert" parameterType="PtaskVo">
		insert into task (TNO, PNO, USERID, tmember, TTITLE, tcontent, TSTATUS, TDATE, tstartdate, tenddate, BREF, BRESTEP, BRELEVEL)
		values (
			task_sequence.NEXTVAL, #{pno}, #{userid}, #{tmember}, #{ttitle}, 'DEFAULT', #{tstatus}, sysdate, #{tstartdate}, #{tenddate}, 
				(select bref from task where tno=#{tno}),
				(select brestep+1 from task where tno=#{tno}),
				(select brelevel+1 from task where tno=#{tno})
				)
	</insert>
	<!-- 하위업무 추가 전 step 처리 -->
	<update id="InnerTaskInsertBeforeUpdate" parameterType="PtaskVo">
		update task set BRESTEP = BRESTEP +1 
   			where BRESTEP > (SELECT BRESTEP FROM task WHERE tno = #{tno})
        	and BREF = (select bref from task where tno = #{tno})
	</update>
	<!-- 로그인한 유저 이름 조회 -->
	<select id="selectMname" resultType="MemberSimpleVo">
		select userid, mname from users where userid=#{userid}
	</select>
	
	
	<!-- 회사 참가자 전체 조회 - 황대경 -->
	<select id="companyMemberList" resultType="MemberSimpleVo">
		SELECT USERID, MNAME, MRANK, AUTHORITY FROM USERS
		WHERE CCODE = (SELECT CCODE FROM USERS WHERE USERID = #{userid})
    	AND AUTHORITY = 'ROLE_M'
		<!--  	
		SELECT USERID, MNAME, MRANK FROM USERS
		WHERE CCODE = (SELECT CCODE FROM USERS WHERE USERID = #{userid})
		-->
	</select>
	
	<!-- 프로젝트의 현재 참가자 조회 -->
	<select id="currentMemberList" resultType="MemberSimpleVo">
		SELECT PNO, USERID, MNAME, MRANK
		FROM MEMBER_PROJECT
		    JOIN USERS USING(USERID)
		WHERE pno = #{pno}
			AND AUTHORITY = 'ROLE_M'
	</select>
	
	<!-- 프로젝트의 현재 참가자 전체 삭제 - 황대경 -->
	<delete id="deleteAllCurrentMember" parameterType="MemberSimpleVo">
		DELETE FROM MEMBER_PROJECT 
		WHERE PNO = #{pno}
	</delete>

	<!-- 회사 참가자 1명 조회 - 황대경 -->
	<!--  
	<select id="companyMemberOne" resultType="MemberSimpleVo">
		SELECT USERID, MNAME, MRANK
        FROM USERS
        WHERE USERID = #{userid}
	</select>
	-->
	<!-- 하위업무 추가시 담당자 리스트용. -->
	<select id="memberProjectselectOne" resultType="MemberSimpleVo">
		select userid, mname
			from member_project 
			join users using(userid)
			where pno=#{pno}
	</select>
	<!-- 업무 정렬 기능 -->
	<select id="taskSortedList" resultMap="maintaskVoMap" parameterType="string">
		select pname, pstatus, pno, ut.userid, tmember, ttitle, tstatus, to_char(tdate, 'yyyy-mm-dd') tdate, to_char(tstartdate, 'yyyy-mm-dd') tstartdate, to_char(tenddate, 'yyyy-mm-dd') tenddate, tno, bref, brestep, brelevel, mname
    	from ( select tno, pno, t.userid, tmember, ttitle, tcontent, tstatus, tdate, tstartdate, tenddate, bref, brestep, brelevel, mname
                    from task t
                    join users u on(u.userid=t.tmember)
                    where tmember = #{userid} or t.userid = #{userid}) ut
        join project using(pno)
        where pstatus in ('미진행', '진행', '보류')
    	order by to_number(pno) desc, to_number(bref) desc, brelevel asc,
    	<choose>
    		<when test="ordertype == 'ttitle1'">
        		ttitle asc
    		</when>
    		<when test="ordertype == 'ttitle2'">
        		ttitle desc
    		</when>
    		<when test="ordertype == 'tstatus1'">
      			tstatus asc
    		</when>
    		<when test="ordertype == 'tstatus2'">
      			tstatus desc
    		</when>
		     <when test="ordertype == 'tmember1'">
		      tmember asc
		    </when>
		     <when test="ordertype == 'tmember2'">
		      tmember desc
		    </when>
		    <when test="ordertype == 'tstartdate1'">
		      tstartdate asc
		    </when>
		    <when test="ordertype == 'tstartdate2'">
		      tstartdate desc
		    </when>
		     <when test="ordertype == 'tenddate1'">
		      tenddate asc
		    </when>
		     <when test="ordertype == 'tenddate2'">
		      tenddate desc
		    </when>
		     <when test="ordertype == 'date1'">
		      tdate asc
		    </when>
		     <when test="ordertype == 'date2'">
		      tdate desc
		    </when>
		     <when test="ordertype == 'tno1'">
		      to_number(tno) asc
		    </when>
		     <when test="ordertype == 'tno2'">
		      to_number(tno) desc
		    </when>
		    <otherwise>
		        to_number(brestep) asc
		    </otherwise>
		</choose>
	</select>
</mapper>