<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">


	<!-- 보안 미적용 -->
	<!-- <http pattern="/**/*.js" security="none" /> -->




	<http use-expressions="true" auto-config="true">
	<intercept-url pattern="/admin/**" access="hasRole('RA')"/>
	<intercept-url pattern="/member/**" access="hasRole('RM')"/>
	<intercept-url pattern="/" access="permitAll"/>
	<form-login login-page="/login"
	default-target-url="/tasklist"
	authentication-failure-url="/login"
	username-parameter="userid" password-parameter="password"/>
	<logout logout-url="/logout" logout-success-url="/projectlist"/>
	<!-- login 성공시 tasklist로 이동, 로그인 실패시 알람+로그인페이지로 이동, 로그아웃 성공시 main page 이동 -->
	<access-denied-handler error-page="/accessDenied"/>
	</http>
	
	<!-- DataSource 추후 지원 -->

	<!-- 1. HSQLDB -->
	<!-- ClassDriver = org.hsqldb.jdbcDriver -->
	<!-- Url = jdbc:hsqldb:hsql://localhost:9001 -->

	<!-- 2. Oracle JDBC -->
	<!-- ClassDriver = oracle.jdbc.driver.OracleDriver -->
	<!-- Url = jdbc:oracle:thin:@127.0.0.1:1521:orcl -->

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" />
		<beans:property name="username" value="{사용자계정}" />
		<beans:property name="password" value="{비밀번호}" />
	</beans:bean>

	<!-- 사용자 세부 계정 서비스 -->
	<beans:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery"
			value="select username,password,enabled from comp_users where username = ?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="select username,authority from comp_authorities where username = ?" />
		<beans:property name="groupAuthoritiesByUsernameQuery"
			value="select g.id, g.group_name, ga.authority from comp_groups g, 
																	  comp_group_members gm, comp_group_authorities ga where gm.username = ? 
																	  and g.id = ga.group_id and g.id = gm.group_id" />
	</beans:bean>

	<!-- provider -->
	<authentication-manager>
		<authentication-provider
			user-service-ref="userDetailsService">
			<!-- <authentication-provider> -->
			<!-- <user-service> -->
			<!-- <user name="user" password="password" authorities="ROLE_USER" /> -->
			<!-- xml 내에 사용자 계정 등록 -->
			<!-- <user name="user" password="$2a$10$Gkr61IXH0YI/.Yh5T6fzteGLCLT6nOmMkID/DmFhWtPmu1WwPrDKq" 
				authorities="ROLE_USER" /> -->
			<!-- <user name="admin" password="password" authorities="ROLE_ADMIN" /> -->
			<!-- </user-service> -->
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- 암호화 패키지 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>